* Library
- websocket-server
-- [How to install]
-- % npm install websocket-server

* Message Format

{
  ope:<operation_name:string>
  arg:<arguments:object>
}

* Coordinate Data Format
** Stage

** Entity{Pack, Item}
各オブジェクト内に座標値を持つ

* TODO
- ステージ情報の記述を簡略化（ファイルに記述するなど）
- ライブラリ変数をローカル化
- クライアントにポイント数描画
- パックマンの動きのシナリオテストができる枠組み作り
-- テキストでシーケンスを記述できるなど
- 敵オブジェクト作成
-- 敵当たり判定
-- レンダリング処理
- sever側とclient側でそれぞれフレームレートがハードコーディングされている
- レンダリング時に移動オブジェクトが残ってしまう
-- 画面全体をクリア->レンダリングを繰り返す

* methods
- syn
-- クライアントからサーバへの最初の接続要求

- synack
-- synに対するサーバからの応答

- prestart
-- すべてのクライアントからの接続(syn)を確認するとサーバからブロードキャストされる
-- クライアントはこのメッセージを受信すると初期化処理を開始する

- ack
-- クライアントが初期化処理終了したことをサーバへ通知するメッセージ

- start
-- サーバack受信後のクライアントへのイベント開始通知
